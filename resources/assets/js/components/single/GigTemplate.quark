import * as quark from "quark-gui";

let InputField = quark.Molecules.FormElements.InputField;
let DatePicker = quark.Molecules.FormElements.DatePicker;
let Checkbox = quark.Molecules.FormElements.Checkbox;
let Button = quark.Atoms.Buttons.Button;

function createReadOnlyFormElement(formElement) {
    if (formElement.attributes == undefined) formElement.attributes = [];
    formElement.attributes.push("readonly");
    return formElement;
}

let formElements = {
    name: {
        id: "name",
        name: "name",
        label: "Name",
        type: "text",
        placeholder: "Name of the gig",
        attributes: [
            "required",
            "v-model='form.data.name'"
        ]
    },
    venue: {
        id: "venue",
        name: "venue",
        label: "Venue",
        type: "text",
        placeholder: "Venue the gig takes place",
        attributes: [
            "v-model='form.data.venue'"
        ]
    },
    location: {
        id: "location",
        name: "location",
        label: "Location",
        type: "text",
        placeholder: "Location of the gig",
        attributes: [
            "v-model='form.data.location'"
        ]
    },
    date: {
        id: "date",
        name: "date",
        label: "Date",
        type: "datetime",
        clockOptions: {
            required: false
        },
        attributes: [
            "v-model='form.data.date'"
        ],
    },
    confirmed: {
        id: "confirmed",
        name: "confirmed",
        label: "Confirmed",
        value: "",
        vueBindings: {
            value: "form.data.confirmed"
        }
    },
    public: {
        id: "public",
        name: "public",
        label: "Public",
        value: "",
        vueBindings: {
            value: "form.data.public"
        }
    },
    actionButton: {
        create: {
            submit: true,
            theme: 'primary',
            content: 'Create'
        },
        edit: {
            submit: true,
            theme: 'primary',
            content: 'Update'
        },
        show: {
            submit: false,
            theme: 'primary',
            content: 'Edit',
            attributes: [
                "v-bind:href='this.formData.editLink'"
            ]
        }
    }
};

let formHtmlElements = {
    name: {
        editable: InputField.getModule(formElements.name),
        readOnly: InputField.getModule(createReadOnlyFormElement(formElements.name))
    },
    venue: {
        editable: InputField.getModule(formElements.venue),
        readOnly: InputField.getModule(createReadOnlyFormElement(formElements.venue))
    },
    location: {
        editable: InputField.getModule(formElements.location),
        readOnly: InputField.getModule(createReadOnlyFormElement(formElements.location))
    },
    date: {
        editable: DatePicker.getModule(formElements.date),
        readOnly: DatePicker.getModule(createReadOnlyFormElement(formElements.date))
    },
    confirmed: {
        editable: Checkbox.getModule(formElements.confirmed),
        readOnly: Checkbox.getModule(createReadOnlyFormElement(formElements.confirmed))
    },
    public: {
        editable: Checkbox.getModule(formElements.public),
        readOnly: Checkbox.getModule(createReadOnlyFormElement(formElements.public))
    },
    actionButton: {
        create: Button.getModule(formElements.actionButton.create),
        edit: Button.getModule(formElements.actionButton.edit),
        show: Button.getModule(formElements.actionButton.show)
    }
};

let template = `
<form method="POST" v-bind:action="formData.postUrl">
    <input v-if="!form.readOnly" type="hidden" name="_token" v-bind:value="csrfToken" />
    <input v-if="formData.viewType == 'edit'" type="hidden" name="_method" value="PUT" />
    <div v-if="form.readOnly">${formHtmlElements.name.readOnly}</div><div v-else>${formHtmlElements.name.editable}</div>
    <div v-if="form.readOnly">${formHtmlElements.venue.readOnly}</div><div v-else>${formHtmlElements.venue.editable}</div>
    <div v-if="form.readOnly">${formHtmlElements.location.readOnly}</div><div v-else>${formHtmlElements.location.editable}</div>
    <div v-if="form.readOnly">${formHtmlElements.date.readOnly}</div><div v-else>${formHtmlElements.date.editable}</div>
    <div v-if="form.readOnly">${formHtmlElements.confirmed.readOnly}</div><div v-else>${formHtmlElements.confirmed.editable}</div>
    <div v-if="form.readOnly">${formHtmlElements.public.readOnly}</div><div v-else>${formHtmlElements.public.editable}</div>
    <div class="input-group float-right">
        <div v-if="formData.viewType == 'create'">${formHtmlElements.actionButton.create}</div>
        <div v-else-if="formData.viewType == 'edit'">${formHtmlElements.actionButton.edit}</div>
        <div v-else-if="formData.viewType == 'show'">${formHtmlElements.actionButton.show}</div>
    </div>
    <div class="clearfix"></div> 
</form>
`;

export default template;
